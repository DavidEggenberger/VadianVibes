@inject IJSRuntime jsRuntime
@inject HttpClient httpClient

<button @onclick="async() => await StartAnalyzeMicrophoneAsync()">@(microphoneAnalyzing ? "Aufnahme beenden" : "Aufnahme starten")</button>

@code {
    public string result = string.Empty;
    public bool microphoneAnalyzing = false;
    AzureCognitiveServicesTokenDTO token;

    [Parameter]
    public EventCallback<(string result, string language)> MicrophoneAnalyzedEventCallback { get; set; }

    protected override async Task OnInitializedAsync()
    {
        token = await httpClient.GetFromJsonAsync<AzureCognitiveServicesTokenDTO>("api/AzureSpeechAnalysis");
    }

    public async Task StartAnalyzeMicrophoneAsync()
    {
        microphoneAnalyzing = true;
        await jsRuntime.InvokeVoidAsync("analyzeMicrophone", DotNetObjectReference.Create(this), "de-CH", token.Token);
        StateHasChanged();
    }

    [JSInvokable]
    public void MicrophoneAnalyzedCallback(string s, string li)
    {
        Console.WriteLine(s);
        microphoneAnalyzing = true;
        MicrophoneAnalyzedEventCallback.InvokeAsync(new(s.Substring("[object Object]".Count()), li));
        microphoneAnalyzing = false;
        StateHasChanged();
    }
}
